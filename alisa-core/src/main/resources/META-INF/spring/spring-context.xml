<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

    <bean id="jacksonJsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>

    <context:annotation-config/>
    <context:property-placeholder properties-ref="properties"/>
    <context:component-scan base-package="ru.drudenko.alisa.core"/>

    <bean id="alisaClientRepository" class="ru.drudenko.alisa.core.model.repository.impl.AlisaClientRepositoryImpl"/>
    <bean id="otpRepository" class="ru.drudenko.alisa.core.model.repository.impl.OtpRepositoryImpl"/>
    <bean id="tokenRepository" class="ru.drudenko.alisa.core.model.repository.impl.TokenRepositoryImpl"/>

    <bean id="velocityEngine" class="org.apache.velocity.app.VelocityEngine" init-method="init"/>

    <bean id="helpCommandService" class="ru.drudenko.alisa.core.service.impl.HelpCommandServiceImpl"/>
    <bean id="listCommandsCommandService" class="ru.drudenko.alisa.core.service.impl.ListCommandsCommandServiceImpl">
        <constructor-arg ref="commandServices"/>
    </bean>

    <bean id="alisaService" class="ru.drudenko.alisa.core.service.impl.AlisaServiceImpl">
        <constructor-arg ref="alisaClientRepository"/>
        <constructor-arg ref="otpRepository"/>
        <constructor-arg ref="tokenRepository"/>
        <constructor-arg ref="commandServices"/>
    </bean>

    <bean id="otpExpiredService" class="ru.drudenko.alisa.core.service.impl.OtpExpiredServiceImpl">
        <constructor-arg ref="otpRepository"/>
    </bean>

    <bean id="ssoCommandService" class="ru.drudenko.alisa.core.service.impl.SsoCommandServiceImpl">
        <constructor-arg ref="alisaClientRepository"/>
        <constructor-arg ref="otpRepository"/>
        <constructor-arg ref="tokenRepository"/>
    </bean>

    <bean id="alisaController" class="ru.drudenko.alisa.core.controller.impl.AlisaControllerImpl">
        <constructor-arg ref="alisaService"/>
    </bean>

    <bean id="oauthController" class="ru.drudenko.alisa.core.controller.impl.OauthControllerImpl">
        <constructor-arg ref="oauthClientServices"/>
        <constructor-arg ref="alisaService"/>
        <constructor-arg ref="velocityEngine"/>
    </bean>

    <bean id="mainController" class="ru.drudenko.alisa.core.controller.impl.MainControllerImpl"/>

    <jaxrs:server address="/services">
        <jaxrs:features>
            <cxf:logging/>
        </jaxrs:features>
        <jaxrs:providers>
            <ref bean="jacksonJsonProvider"/>
        </jaxrs:providers>
        <jaxrs:serviceBeans>
            <ref bean="oauthController"/>
            <ref bean="alisaController"/>
            <ref bean="mainController"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <!--    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--        <property name="packagesToScan" value="ru.drudenko.alisa.core.model.*"/>-->
    <!--        <property name="jpaVendorAdapter">-->
    <!--            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">-->
    <!--                <property name="showSql" value="true"/>-->
    <!--                <property name="generateDdl" value="true"/>-->
    <!--            </bean>-->
    <!--        </property>-->
    <!--        <property name="jpaProperties">-->
    <!--            <props>-->
    <!--                <prop key="hibernate.dialect">${spring.jpa.database-platform}</prop>-->
    <!--                <prop key="hibernate.ddl.auto">update</prop>-->
    <!--                <prop key="hibernate.show_sql">${spring.jpa.show-sql}</prop>-->
    <!--                <prop key="hibernate.format_sql">false</prop>-->
    <!--                <prop key="hibernate.cache.use_second_level_cache">true</prop>-->
    <!--                <prop key="hibernate.cache.use_query_cache">true</prop>-->
    <!--                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->
</beans>